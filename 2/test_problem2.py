# coding: utf-8

import unittest
from problem2 import fibonacci, fibonacci_sequence, problem2

"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


class TestProblem2(unittest.TestCase):
    def test_fibonacci_sequence(self):
        self.assertEquals(fibonacci_sequence(11), [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89])

    def test_fibonacci_number(self):
        self.assertEqual(fibonacci(0), 0)
        self.assertEquals(fibonacci(1), 1)
        self.assertEquals(fibonacci(2), 1)
        self.assertEquals(fibonacci(3), 2)
        self.assertEquals(fibonacci(4), 3)
        self.assertEquals(fibonacci(5), 5)
        self.assertEquals(fibonacci(6), 8)
        self.assertEquals(fibonacci(100), 354224848179261915075)

    def test_problem(self):
        self.assertEquals(problem2(), 4613732)


if __name__ == '__main__':
    unittest.main()
